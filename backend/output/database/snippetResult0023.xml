<?xml version="1.0" encoding="UTF-8"?>
<result>
<description>
<docid>7289</docid>
<orderid>0</orderid>
<type>TEXT</type>
<url>http://www.developer.com/java/ent/article.php/10933_3464311_2/Putting-an-Object-in-a-Safe-State.htm</url>
</description>
<TEXT orderid="0" >
Developer.com
					Internet.com
				
				
			
		
		
		



		
	
	
	
		
			
				Developer 
				Microsoft &amp; .NET 
				Architecture &amp;amp Design 
				Database 
				Open Source
				Other
			
		
		
			
				Web Services
				Security
				Mobile
				Project Management
			
		
		
			RSS 
		
		
	
	
	









	
    

	
		
			
			
				March 07, 2010
				
				
					Hot Topics:
					
						prev
						
							
							
								
C#
.NET
 open source
C++
Java

								
							
							
						
						next
					
					
				
					Developer.com
					Java
					Enterprise Java
					
				
				
					Read More in Enterprise Java &#187;
				
						
			
			
			
				
				
					









					
				
				
				
					
					
				
			
			
			
			
			
			Putting an Object in a Safe State
			
			
				
				
					January 26, 2005
					By 
Matt Weisfeld

Bio &#187;
					Send Email &#187;
					More Articles  &#187;
				

Using UML to Model Classes

As an example, let&apos;s consider that we have two ways to construct a database reader class:


Pass the name of the database and position the cursor at the beginning of the database.
Pass the name of the database and the position within the database where we want the cursor to position itself.


Figure 2 shows a class diagram for the DataBaseReader class. Note that the diagram lists two constructors for the class. While the diagram shows the two constructors, without the parameter list there is no way to know which constructor is which. To distinguish the constructors, you can look at the corresponding code listed below.


Figure 2: The DataBaseReader class diagram.



	
		Post a comment
		Email Article
		Print Article
		
			 Share Articles
			
				
					
						 Digg
						 del.icio.us
						 Slashdot
						 DZone
						 Reddit
						 StumbleUpon
						 Facebook
						 FriendFeed
						 Furl

						 Newsvine
						 Google
						 LinkedIn
						 MySpace
						 Technorati
						 Twitter
						 Windows Live
						 YahooBuzz

					
				
			
		
	

		No Return Type
Notice that in this class diagram the constructors do not have a return type. All other methods besides constructors must have return types.


Here is a code segment of the class that shows its constructors and the attributes that the constructors initialize (see Figure 3):
</TEXT>
<CODE orderid="1" >
public class DataBaseReader {

   String DBName;
   int startPosition;

   // initialize just the name
   public DataBaseReader (String name){
   DBName = name;
};

   // initialize the name and the position
   public DataBaseReader (String name, int pos){
      DBName = name;
      startPosition = pos;
   };

   .. // rest of class
}
</CODE>
<TEXT orderid="2" >
Click here for a larger image.

Figure 3: Creating a new object.

How the Superclass Is Constructed

When using inheritance, you must know how the parent class is constructed. Remember that when you use inheritance, you are inheriting everything about the parent. Thus, you must become intimately aware of all the parent&apos;s data and behavior. The inheritance of an attribute is fairly obvious. However, how a constructor is inherited is not as obvious. After the new keyword is encountered and the object is allocated, the following steps occur (see Figure 4):


The first thing that happens inside the constructor is that the constructor of the class&apos;s superclass is called.
Then each class attribute of the object is initialized. These are the attributes that are part of the class definition (instance variables), not the attributes inside the constructor or any other method (local variables). In the DataBaseReader code presented earlier, the integer startposition is an instance variable of the class.
Then the rest of the code in the constructor executes.






Click here for a larger image.

Figure 4: Constructing an object.

The Design of Constructors

When designing a class, it is good practice to initialize all the attributes. In some languages, the compiler might attempt to do this initialization. As always, don&apos;t count on the compiler to initialize attributes! In Java, you cannot use an attribute until it is initialized. If the attribute is first set in the code, make sure that you initialize the attribute to some valid condition, for example, set an integer to zero.

Constructors are used to ensure that the application is in a stable state. For example, initializing an attribute to zero, when it is intended for use as a denominator in a division operation, may lead to an unstable application. You must take into consideration the fact that a division by zero is an illegal operation.

During the design, it is good practice to identify a stable state for all attributes and then initialize them to this stable state in the constructor.

Error Handling

It is rare for a class to be written perfectly the first time. In most, if not all, situations, things will go wrong. Any designer who does not plan for problems is courting danger.

Assuming that your code has the ability to detect and trap an error condition, you can handle the error in several different ways: In a training class based on their book Java Primer Plus, page 223, by Tyma, Torok and Downing, the authors state that there are three basic solutions to handling problems that are detected in a program: fix it, ignore the problem by squelching it, and exit the runtime in some graceful manner. Gilbert and McCarty, in their book Object-Oriented Design in Java, on page 139, basically state the same thing but add the choice of throwing an exception:


Ignore the problem&#8212;not a good idea!
Check for potential problems and abort the program when you find a problem.
Check for potential problems, catch the mistake, and attempt to fix the problem.
Throw an exception. (This is the preferred way to handle the situation)


These strategies are discussed in the following sections.

Ignoring the Problem

Simply ignoring a potential problem is a recipe for disaster. And if you are going to ignore the problem, why bother detecting it in the first place? The bottom line is that you should not ignore the problem. The primary directive for all applications is that the application should never crash. If you do not handle your errors, the application will eventually terminate ungracefully or continue in a mode that can be considered an unstable state. In the latter case, you might not even know it for some period of time.

Checking for Problems and Aborting the Application

If you choose to check for potential problems and abort the application when a problem is detected, whenever a problem is detected, the application displays a message saying that you have a problem. Then the code gracefully exits and the user is left staring at the computer screen, shaking his or her head and wondering what bus just happened. While this is a far superior option to ignoring the problem, it is by no means optimal. However, this does allow the system to clean up things and put itself in a more stable state, such as closing files.			
			
			
			
				
				
1 
2 
3 
4 
5 
6 

				
			
			
			

			

			




			
			
			
			
			
			
				
					Networking Solutions
					


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
					
				
			
			
		
		


	
	Free Newsletters :
		
			Enterprise Development Daily
			Java/Open Source Daily
			Microsoft Tech Daily
			4 Guys from Rolla
			Database Journal
			Database Daily
			Web Development Daily
			Hardware Daily
			Networking Daily
		
		
		
	
		
	
	
	










	
	
	
	
	










	
	
	
	
	
		
			Most Popular Stories
			
		
		
			
				
					
						Today
						This Week
						All-Time
					
				
				
					
						
				1 Using JDBC with MySQL, Getting Started
				2 Creating Use Case Diagrams
				3 Manipulate XML File Data Using C#
				4 The Top 10 jQuery Plugins for the JavaScript-Weary
				5 Parsing HTML in Microsoft C#

						
					
					
						
				1 Using JDBC with MySQL, Getting Started
				2 Creating Use Case Diagrams
				3 JSF 2.0 Views: Hello Facelets, Goodbye JSP
				4 Manipulate XML File Data Using C#
				5 Oracle Programming with PL/SQL Collections

						
					
					
						
				1 Using JDBC with MySQL, Getting Started
				2 Creating Use Case Diagrams
				3 Oracle Programming with PL/SQL Collections
				4 Manipulate XML File Data Using C#
				5 Using ASP.NET To Send Email

						
					
				
			
		
	
	









	
	
	
	
		
			Most Commented On
			
		
		
			
				
					
						This Week
						This Month
						All-Time
					
				
				
					
						
1 Make Your Java Web Applications Impervious to Cross-site Scripting
2 Using ASP.NET To Send Email
3 Five Indispensable MySQL Tools
4 ActiveX Control Tutorial - Part 1
5 Debugging a Java Program with Eclipse




						
					
					
						
1 PHP Developers Prefer Using Windows to Build Enterprise Apps: Study
2 Day 1: Learning the Basics of PL/SQL
3 Creating Use Case Diagrams
4 An Introduction to Java Annotations
5 VB TIP: InputBox - OK or Cancel?




						
					
					
						
1 Creating Use Case Diagrams
2 C# Tip: Placing Your C# Application in the System Tray
3 Day 1: Learning the Basics of PL/SQL
4 Using ASP.NET To Send Email
5 Using JDBC with MySQL, Getting Started




						
					
				
			
		
	
	
	
		
			
				
					Partners
				
				
					
						Partner With Us



	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
					
				
			
		
		
			
				
					More for Developers
				
				
					
						Site Map
						Contact Us
						CodeGuru
						Gamelan
						Jars
						Discussions
						VBforums
						DevX
						DatabaseJournal
					
				
				
				










				
			
		
	
	
	
	
	
		
			On the Forums
			Visit the Forums &#187;
		
		
			
				
					
						Latest
						Most Views
						Most Replies
					
				
				
					
						

 1 Sql Compact, File Path problems
 2 a C question
 3 Help calling an object, new to OOP and know I am missing something stupid.
 4 Operator Overloading on an Array
 5 TCP Client Server issue


						
					
					
						

 1 Add ScrollBars to JTextArea
 2 Create datatable from List&lt;T&gt;?
 3 Force stop/kill/eject usb mass storage device
 4 Itemstyle.xsl on sharepoint
 5 New MFC based on Visual Studio 2008 problems(CMFCPropertySheet)


						
					
					
						

 1 [RESOLVED] C++ does not support default-int
 2 Set Focus On Mouse Hover (MFC)
 3 Can someone check the DLL?
 4 help help, ... :) &quot;game of life&quot;,
 5 preallocating space for stl::queue


						
					
				
			
		
	
	


  
    
		Key IT Solutions
    
    
      
					Effective Software Delivery with IBM
					SharePoint Development and Programming Forum
					Microsoft Visual Studio 2010 Showcase
					MSDN Spotlight
					PHP for Windows Showcase
		      
    
  

	

Local Guides

&#160;&gt;Architecture &amp; Design

&#160;&gt;Database

&#160;&gt;Java

&#160;&gt;Languages &amp; Tools

&#160;&gt;Microsoft &amp; .NET

&#160;&gt;Open Source

&#160;&gt;Project Management

&#160;&gt;Security

&#160;&gt;Techniques

&#160;&gt;Wireless





		
		
		







    

    

    The Network for Technology Professionals
        
        
        
        
        
        
        Search: 
        

        
  
    
         About Internet.com 
        

       Legal Notices, Licensing, Permissions, Privacy  Policy.
        


        Advertise | Newsletters |  E-mail Offers

  



    
        Solutions
        
                        
				Whitepapers and eBooks
                
                    
                        
                                                        Article: Adobe Helps PHP Developers Create Rich Internet Applications

						   						                              Intel Brief: Five-Star IT Support--Intel Core 2 processor with vPro Delivers ROI of 524 Percent

						   						                              Intel Whitepaper: Implementing Intel vPro Technology to Drive Down Client Management Costs

						   						                              Intel Article: Intel Core i5 vPro Brings Intelligence to the Processor

						                               
                         
                        
												                              Microsoft Personalized Whitepapers and Resources for You

						   						                              Microsoft Articles: Visual Studio 2010

						   						                              Adobe Article: Java Developers Finding a Home at Adobe Flex

						   						                              MORE WHITEPAPERS, EBOOKS, AND ARTICLES

						   						                          
                    
                
            
                        
				Webcasts
                
                    
                        
                                                        Micro Focus Webcast: Boosting the Impact and Effectiveness of Software Development QA and Testing

						   						                              Intel Video: 2010 Intel Core Processor Technologies

						                               
                         
                        
												                              MORE WEBCASTS, PODCASTS, AND VIDEOS

						   						                          
                    
                
            
                        
				Downloads and eKits
                
                    
                        
                                                        Get Started: Create Applications Without Infrastructure Limits with the Windows Azure Platform

						   						                              HP PartnerONE | SolutionsINFINITE   Visit us at hp.com/partners/us

						                               
                         
                        
												                              Iron Speed Designer Application Generator

						   						                              MORE DOWNLOADS, EKITS, AND FREE TRIALS

						   						                          
                    
                
            
                        
				Tutorials and Demos
                
                    
                        
                                                        Develop Cloud Applications - Get Started Now with the Windows Azure Platform

						   						                              Learn Unified Communications

						   						                              Learn SQL Server 2008

						   						                              Learn Windows Server 2008 R2

						   						                              Internet.com Hot List: Get the Inside Scoop on IT and Developer Products

						                               
                         
                        
												                              Learn Forefront

						   						                              Learn System Center

						   						                              All About Botnets

						   						                              Learn SharePoint

						   						                              MORE TUTORIALS, DEMOS AND STEP-BY-STEP GUIDES
</TEXT>
</result>
