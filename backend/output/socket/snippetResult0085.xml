<?xml version="1.0" encoding="UTF-8"?>
<result>
<description>
<docid>80661</docid>
<orderid>6</orderid>
<type>TEXT</type>
<url>http://www.java-samples.com/forprinting.php?tutorialid=1119</url>
</description>
<TEXT orderid="4" >
Thread Safety

Net::IMAP supports concurrent threads. For example,&#160;
</TEXT>
<CODE orderid="5" >
imap = Net::IMAP.new(&quot;imap.foo.net&quot;, &quot;imap2&quot;)
  imap.authenticate(&quot;cram-md5&quot;, &quot;bar&quot;, &quot;password&quot;)
  imap.select(&quot;inbox&quot;)
  fetch_thread = Thread.start { imap.fetch(1..-1, &quot;UID&quot;) }
  search_result = imap.search([&quot;BODY&quot;, &quot;hello&quot;])
  fetch_result = fetch_thread.value
  imap.disconnect
</CODE>
<TEXT orderid="6" >
This script invokes the FETCH command and the SEARCH command concurrently.&#160;

Errors


An IMAP server can send three different types of responses to indicate failure:&#160;



NO: the attempted command could not be successfully completed. For instance, the username/password used for logging in are incorrect; the selected mailbox does not exists; etc.&#160;

BAD: the request from the client does not follow the server&#146;s understanding of the IMAP protocol. This includes attempting commands from the wrong client state; for instance, attempting to perform a SEARCH command without having SELECTed a current mailbox. It can also signal an internal server failure (such as a disk crash) has occurred.&#160;

BYE: the server is saying goodbye. This can be part of a normal logout sequence, and can be used as part of a login sequence to indicate that the server is (for some reason) unwilling to accept our connection. As a response to any other command, it indicates either that the server is shutting down, or that the server is timing out the client connection due to inactivity.&#160;



These three error response are represented by the errors Net::IMAP::NoResponseError, Net::IMAP::BadResponseError, and Net::IMAP::ByeResponseError, all of which are subclasses of Net::IMAP::ResponseError. Essentially, all methods that involve sending a request to the server can generate one of these errors. Only the most pertinent instances have been documented below.&#160;



Because the IMAP class uses Sockets for communication, its methods are also susceptible to the various errors that can occur when working with sockets. These are generally represented as Errno errors. For instance, any method that involves sending a request to the server and/or receiving a response from it could raise an Errno::EPIPE error if the network connection unexpectedly goes down. See the socket(7), ip(7), tcp(7), socket(2), connect(2), and associated man pages.&#160;



Finally, a Net::IMAP::DataFormatError is thrown if low-level data is found to be in an incorrect format (for instance, when converting between UTF-8 and UTF-16), and Net::IMAP::ResponseParseError is thrown if a server response is non-parseable.




                  
                  
                    
                  
                  
                    &#160;
                  
                  
                    &#160;
                  
                
              
            
            
            
          
          
            &#160;
          
           
            
              
                
                  
                    &#160;
                  
                  
                    
                  
                  
                    &#160;
                  
                  
                    
                      
                        COPYRIGHT&#169; 2006 java-samples.com. ALL RIGHTS RESERVED.
                      
                    
                  
                  
                    &#160;
</TEXT>
</result>
