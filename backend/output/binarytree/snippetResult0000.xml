<?xml version="1.0" encoding="UTF-8"?>
<result>
<description>
<docid>74850</docid>
<orderid>0</orderid>
<type>TEXT</type>
<url>http://www.roseindia.net/java/java-get-example/java-binary-tree-insert.shtml</url>
</description>
<TEXT orderid="0" >
Java|
				Frameworks|
				Databases|
				Technology|
				Development|
				Build/Test tools|
				OS|
				Servers|
				PHP|
				Books|
				More|
		What&apos;s New?


		
      

      
        
		

		Core Java|
				JSP|
				Servlets|
				XML|
				EJB|
				JEE5|
				Web Services|
				J2ME|
				Glossary|
		

Questions? | Software Development


		

		

      


                

              














		


		
			
				
				  
					&#160;
					
					




								
								  
									Search&#160;
									
									
									

								  
								
								




			
			Java binary tree insert
			
		



		
			



		




 






			
				The Binary Tree insert is specialized use of binary tree. The concept lies behind is that all the element value less than the root node value insert left to the root node and the element value greater than the root node insert right to this root node.
			
		




		



	
		
			



     
     











  
  
    
      Java binary tree insert
	  
 

      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
      

The Binary Tree insert is specialized use of binary tree. The concept lies
behind is that all the element value less than the root node value insert left
to the root node and the element value greater than the root node insert right
to this root node.
This module implements a binary search tree, which is a specialized usage of
a binary tree. The basic principle is that all elements to the left are less
than the root, all elements to the right are greater than the root. This reduces
the search time for elements in the tree, by halving the number of nodes that
need to be searched each time a node is examined.Binary Tree find its extensive
application in games and is well known in date-structure. Trees are recursive
data-structure and therefore tend to recursive traversal function&#160;
Understand with Example
In this Tutorial we want to describe you a code that helps you in
understanding a code&#160; Java binary tree insert. For this we have a class Binary Tree
Insert, Inside the main class we instantiate Binary tree insert class, that call
a run method. Inside this we have a static class node declared a variable node
left ,right and int value to store the node value. The node constructor accept a
value passed as argument. The run method creates root node object assign with
root value of node is 25.The Println print the root value of the node. Further
the insert method insert the different root node value.The conditional operator
evaluate the root node value, if the value element is less than the root
value&#160; insert the node value to the left of root node else the value of the
element insert right to the root node.
new Node( 25) -This is used to create all its new node&#160;



	BinarytreeInsert.java

  
    &#160;
</TEXT>
<CODE orderid="1" >
public&#160;class&#160;BinarytreeInsert&#160;{



&#160;&#160;&#160;&#160;public&#160;static&#160;void&#160;main(String[]&#160;args)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;new&#160;BinarytreeInsert().run();

&#160;&#160;&#160;&#160;}



&#160;&#160;&#160;&#160;static&#160;class&#160;Node&#160;{



&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Node&#160;left;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Node&#160;right;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;int&#160;value;



&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;public&#160;Node(int&#160;value)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;this.value&#160;=&#160;value;

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;}



&#160;&#160;&#160;&#160;public&#160;void&#160;run()&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;Node&#160;rootnode&#160;=&#160;new&#160;Node(25);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(&quot;Building&#160;tree&#160;with&#160;root&#160;value&#160;&quot;&#160;+&#160;rootnode.value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(&quot;=================================&quot;);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(rootnode,&#160;11);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(rootnode,&#160;15);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(rootnode,&#160;16);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(rootnode,&#160;23);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(rootnode,&#160;79);



&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;



&#160;&#160;&#160;&#160;public&#160;void&#160;insert(Node&#160;node,&#160;int&#160;value)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(value&#160;&lt;&#160;node.value)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(node.left&#160;!=&#160;null)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(node.left,&#160;value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;else&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(&quot;&#160;&#160;Inserted&#160;&quot;&#160;+&#160;value&#160;+&#160;&quot;&#160;to&#160;left&#160;of&#160;Node&#160;&quot;&#160;+&#160;node.value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;node.left&#160;=&#160;new&#160;Node(value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;else&#160;if&#160;(value&#160;&gt;&#160;node.value)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;if&#160;(node.right&#160;!=&#160;null)&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;insert(node.right,&#160;value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}&#160;else&#160;{

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;System.out.println(&quot;&#160;&#160;Inserted&#160;&quot;&#160;+&#160;value&#160;+&#160;&quot;&#160;to&#160;right&#160;of&#160;Node&#160;&quot;&#160;+&#160;node.value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;node.right&#160;=&#160;new&#160;Node(value);

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;}

&#160;&#160;&#160;&#160;}

}
</CODE>
<TEXT orderid="2" >
Output of the program

  
    &#160;
  
    
Building&#160;tree&#160;with&#160;root&#160;value&#160;25

=================================

&#160;&#160;Inserted&#160;11&#160;to&#160;left&#160;of&#160;Node&#160;25

&#160;&#160;Inserted&#160;15&#160;to&#160;right&#160;of&#160;Node&#160;11

&#160;&#160;Inserted&#160;16&#160;to&#160;right&#160;of&#160;Node&#160;15

&#160;&#160;Inserted&#160;23&#160;to&#160;right&#160;of&#160;Node&#160;16

&#160;&#160;Inserted&#160;79&#160;to&#160;right&#160;of&#160;Node&#160;25
    
   
  
  


Download Source code

 

      
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
      &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;
      

      
    
  


  








  
     &#187; View all related tutorials 
    


			
				More in this series...
				Most Read
				Latest
				Search
			
			
				Java error identifier excepted ...  180003 viewsJava error class ...  180011 viewsJava error java.lang.noclassdeffounderror ...  180012 viewsGet Length of Array ...  180040 viewsGet Length of Array ...  180062 viewsGet Java Version ...  180079 viewsGet Property by Name ...  180107 viewsJava get Free Memory ...  180114 viewsJava get available Font ...  180115 viewsJava error icon ...  180115 views&#160;  &#187; View all related tutorials 
			

		











  
  
  1
  2
  3
  4
  5
  




Related Tags:
java
windows
c
error
orm
form
diff
io
dialog
icons
sed
format
version
window
display
icon
port
using
log
support












		
				Leave your comment:
		
		

				Name:
				
		
		
				Email:
				
		
		

				URL:
				
		

		

				Title:
				
		

		
				Comments:

				
		

		
				Enter Code:
				
			
		
      

        

        


		
		
			
				&#160;
				

				Note:  Emails will not be visible or used in any way, and are not required.  Please keep comments relevant. Any content deemed inappropriate or offensive may be edited and/or deleted. 

No HTML code is allowed.  Line breaks will be converted automatically.  URLs will be auto-linked.  Please use BBCode to format your text.


		















 
  
    Add This
      Tutorial To:
  
  
    &#160;
      Del.icio.us
    &#160;
      Digg
    &#160;
      Google
    &#160;
      Spurl

    &#160;
      Blink
    &#160;
      Furl
    &#160;
      Simpy
    &#160;
      Y! MyWeb&#160;
  


	Current Comments
1 comments so far (post your own)
 View All Comments Latest 10 Comments:

		kkl

		Posted by prabhat on Saturday, 11.29.08 @ 04:27am | #82172

		
&#160;&#160;&#160;&#160;&#160;&#160;View This Comment Separately






				





	


					 
					  
						&#160;
					  
					 



					 
					  
						


					 
					 


					 

					 Tell A Friend


					  Your Friend Name
					 
					
					

					
					

					
					
					

						

						
&#160;
					  
					 


		
					  
						


&#160;
					  
					 


					
					


					

			
			  

					
					




		
		

		
			Recently Viewed
			

			


								Java binary tree insert
										Constructor Overloading in Java
										Java clone method example
										JavaScript array map
										Tutorials - Java Server Pages Technology
										Tutorials - Java Server Pages Technology
										Using Beans in JSP. A brief introduction to JSP and Java Beans.
										Apache Axis2 Hello World Example
										J2ME Audio Record
										Java get File Timestamp
					
			  



		
		




	
	

	
		Software Solutions
		

	  


		Software Solutions and Services

		Website Designing Services

		Web Designing Packages! From $150!
		Flex Outsourcing


		Hire Flex Developer

		Website Designing Company Web Hosting

		Website Designing Quotation

		Hire PHP Developer
		Hire PHP programmer

		PHP Outsourcing

		Java Project Outsourcing

		Hire Software Developer
		Hire Java Developer

	    Hire iPhone developer
	    Outsourcing iPhone development
	    Offshore iPhone Apps Development


	  



	
	



					 
					  
						Search Tutorials
					  
					 

				
				

					
					  
						
						  
							 
						  
						
					  

					

				
				


					 
					  


&#160;


&#160;
















  
    


    
	 
			&#160;
     
	




    
          

                      
                        Home

                      | JSP
                      | EJB
                      | JDBC
                      | Java Servlets
                      | WAP&#160;
                      | Free JSP Hosting&#160;
					  | Search Engine
                      | News Archive
                      | Jboss 3.0 tutorial
                      | Free Linux CD&apos;s
                      | Forum

					   | Blogs

					   

                      
                      About Us |
					  Advertising On RoseIndia.net&#160; |
					  Site Map
                      
		
    


	


    
      

		
		  
				

				  


				  

				  

				  

				  

				  
				

          
	    


      
    


     
        
         

  

  

        

        
    


     
        
          Send your comments, Suggestions or Queries regarding this site at roseindia_net@yahoo.com.
        
    

    
      
        Copyright &#169; 2008. All rights reserved.
</TEXT>
</result>
